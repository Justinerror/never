#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
######
###### This config file is a demonstration of streaming processing in seatunnel config
######

env {
  job.mode = "BATCH"
}

source {
  FakeSource {
    result_table_name = "fake"
    row.num = 100
    table-names = ["test.table1", "test.table2"]
    string.template = ["aa_11"]
    schema = {
        columns = [
               {
                  name = id
                  type = int
                  nullable = false
                  comment = "primary key id"
               },
               {
                  name = name
                  type = "string"
                  nullable = true
                  comment = "name"
                  defaultValue = null
               },
               {
                  name = age
                  type = int
                  nullable = false
                  comment = "age"
                  defaultValue = 13
               }
           ]
           primaryKey {
              name = "primary key"
              columnNames = [id]
           }
    }
  }
}

transform {
  Sql {
    source_table_name = "fake"
    result_table_name = "fake1"
    table_transform = [
         {
            tablePath = "test.table1"
            query = "select id, regexp_replace(name, '_', '.') as name, age, pi() as pi from fake"
         }
         ,
         {
            tablePath = "test.table2"
            query = "select id, regexp_replace(name, '_', '-') as name, age, pi() as pi from fake"
         }
    ]
  }
}

sink {
  Assert {
    source_table_name = "fake1"
    tables = [
      {
        table_path = "test.table1"
        rules =
              {
                field_rules = [
                  {
                    field_name = "name"
                    field_type = "string"
                    field_value = [
                      {equals_to = "aa.11"}
                    ]
                  }
                ]
                row_rules = [
                  {
                    rule_type = MIN_ROW
                    rule_value = 100
                  },
                  {
                    rule_type = MAX_ROW
                    rule_value = 100
                  }
                ]

                catalog_table_rule {
                    primary_key_rule = {
                        primary_key_name = "primary key"
                        primary_key_columns = ["id"]
                    }
                    column_rule = [
                       {
                        name = "id"
                        type = int
                        nullable = false
                        comment = "primary key id"
                       },
                      {
                        name = "name"
                        type = string
                        nullable = true
                        defaultValue = null
                      },
                      {
                        name = "age"
                        type = int
                        nullable = false
                        comment = "age"
                        defaultValue = 13
                      },
                       {
                         name = "pi"
                         type = double
                         nullable = true
                         defaultValue = null
                       }
                    ]
                }
              }
      }
      ,
       {
          table_path = "test.table2"
          rules =
                {
                field_rules = [
                  {
                    field_name = "name"
                    field_type = "string"
                    field_value = [
                      {equals_to = "aa-11"}
                    ]
                  }
                ]
                  row_rules = [
                    {
                      rule_type = MIN_ROW
                      rule_value = 100
                    },
                    {
                      rule_type = MAX_ROW
                      rule_value = 100
                    }
                  ]

                  catalog_table_rule {
                      primary_key_rule = {
                          primary_key_name = "primary key"
                          primary_key_columns = ["id"]
                      }
                      column_rule = [
                         {
                          name = "id"
                          type = int
                          nullable = false
                          comment = "primary key id"
                         },
                        {
                          name = "name"
                          type = string
                          nullable = true
                          defaultValue = null
                        },
                        {
                          name = "age"
                          type = int
                          nullable = false
                          comment = "age"
                          defaultValue = 13
                        },
                        {
                          name = "pi"
                          type = double
                          nullable = true
                          defaultValue = null
                        }
                      ]
                  }
                }
       }
    ]
  }
}